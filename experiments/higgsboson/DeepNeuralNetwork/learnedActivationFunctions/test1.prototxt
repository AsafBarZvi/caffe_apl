name: "LeNet"
layers {
name: "data"
type: HDF5_DATA
top: "data"
top: "label"
	hdf5_data_param {
		source: "higgs_data_test_list.txt"
		batch_size: 100
	}
}
layers {
  name: "ip1"
  type: INNER_PRODUCT
  bottom: "data"
  top: "ip1"
	weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 274
    weight_filler {
      type: "gaussian"
			std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "learned1"
  type: LEARNED_NEURON
  bottom: "ip1"
  top: "ip1_l"
  blobs_lr: 1
  blobs_lr: 1
  blobs_lr: 0
  learned_neuron_param {
    sums: 2
    type: "learnhalfmax"
    weight_filler1 {
      type: "dense_uniform"
      std: 0.5
    }
    weight_filler2 {
      type: "gaussian"
      std: 0.5
    }
    weight_filler3 {
      type: "constant"
      value: -1
    }
  }
}
layers {
  name: "ip2"
  type: INNER_PRODUCT
  bottom: "ip1_l"
  top: "ip2"
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 274
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "learned2"
  type: LEARNED_NEURON
  bottom: "ip2"
  top: "ip2_l"
  blobs_lr: 1
  blobs_lr: 1
  blobs_lr: 0
  learned_neuron_param {
    sums: 2
    type: "learnhalfmax"
 		weight_filler1 {
      type: "dense_uniform"
      std: 0.5
    }
    weight_filler2 {
      type: "gaussian"
      std: 0.5
    }
    weight_filler3 {
      type: "constant"
      value: -1
    }
  }
}
layers {
  name: "ip3"
  type: INNER_PRODUCT
  bottom: "ip2_l"
  top: "ip3"
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 274
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "learned3"
  type: LEARNED_NEURON
  bottom: "ip3"
  top: "ip3_l"
  blobs_lr: 1
  blobs_lr: 1
  blobs_lr: 0
  learned_neuron_param {
    sums: 2
    type: "learnhalfmax"
 		weight_filler1 {
      type: "dense_uniform"
      std: 0.5
    }
    weight_filler2 {
      type: "gaussian"
      std: 0.5
    }
    weight_filler3 {
      type: "constant"
      value: -1
    }
  }
}
layers {
  name: "ip4"
  type: INNER_PRODUCT
  bottom: "ip3_l"
  top: "ip4"
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 274
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "learned4"
  type: LEARNED_NEURON
  bottom: "ip4"
  top: "ip4_l"
  blobs_lr: 1
  blobs_lr: 1
  blobs_lr: 0
  learned_neuron_param {
    sums: 2
    type: "learnhalfmax"
    weight_filler1 {
      type: "dense_uniform"
      std: 0.5
    }
    weight_filler2 {
      type: "gaussian"
      std: 0.5
    }
    weight_filler3 {
      type: "constant"
      value: -1
    }
	}
}
layers {
  name: "ip5"
  type: INNER_PRODUCT
  bottom: "ip4_l"
  top: "ip5"
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 274
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "learned5"
  type: LEARNED_NEURON
  bottom: "ip5"
  top: "ip5_l"
  blobs_lr: 1
  blobs_lr: 1
  blobs_lr: 0
  learned_neuron_param {
    sums: 2
    type: "learnhalfmax"
    weight_filler1 {
      type: "dense_uniform"
      std: 0.5
    }
    weight_filler2 {
      type: "gaussian"
      std: 0.5
    }
    weight_filler3 {
      type: "constant"
      value: -1
    }
  }
}
layers {
  name: "ip6"
  type: INNER_PRODUCT
  bottom: "ip5_l"
  top: "ip6"
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 274
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "learned6"
  type: LEARNED_NEURON
  bottom: "ip6"
  top: "ip6_l"
  blobs_lr: 1
  blobs_lr: 1
  blobs_lr: 0
  learned_neuron_param {
    sums: 2
    type: "learnhalfmax"
    weight_filler1 {
      type: "dense_uniform"
      std: 0.5
    }
    weight_filler2 {
      type: "gaussian"
      std: 0.5
    }
    weight_filler3 {
      type: "constant"
      value: -1
    }
  }
}
layers {
  name: "drop6"
  type: DROPOUT
  bottom: "ip6_l"
  top: "ip6_l"
  dropout_param {
    dropout_ratio: 0.25
  }
}
layers {
  name: "ip7"
  type: INNER_PRODUCT
  bottom: "ip6_l"
  top: "ip7"
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 274
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "learned7"
  type: LEARNED_NEURON
  bottom: "ip7"
  top: "ip7_l"
  blobs_lr: 1
  blobs_lr: 1
  blobs_lr: 0
  learned_neuron_param {
    sums: 2
    type: "learnhalfmax"
    weight_filler1 {
      type: "dense_uniform"
      std: 0.5
    }
    weight_filler2 {
      type: "gaussian"
      std: 0.5
    }
    weight_filler3 {
      type: "constant"
      value: -1
    }
  }
}
layers {
  name: "drop7"
  type: DROPOUT
  bottom: "ip7_l"
  top: "ip7_l"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  name: "ip8"
  type: INNER_PRODUCT
  bottom: "ip7_l"
  top: "ip8"
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "prob"
  type: SIGMOID
  bottom: "ip8"
  top: "prob"
}
layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "prob"
  bottom: "label"
  top: "accuracy"
  accuracy_param {
    binary: true
		#print: "7Full/learned/gt_vs_pred/replace_learn_with_relu"
  }
}
